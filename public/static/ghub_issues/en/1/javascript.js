(function(){var a="sproutcore/standard_theme";if(!SC.BUNDLE_INFO){throw"SC.BUNDLE_INFO is not defined!"
}if(SC.BUNDLE_INFO[a]){return}SC.BUNDLE_INFO[a]={requires:["sproutcore/empty_theme"],styles:["/static/sproutcore/standard_theme/en/1/stylesheet-packed.css","/static/sproutcore/standard_theme/en/1/stylesheet.css"],scripts:["/static/sproutcore/standard_theme/en/1/javascript-packed.js"]}
})();GhubIssues=SC.Application.create({NAMESPACE:"GhubIssues",VERSION:"0.1.0",store:SC.Store.create().from("GhubIssues.GithubDataSource")});
GhubIssues.issueController=SC.ObjectController.create({contentBinding:"GhubIssues.issuesController.selection"});
GhubIssues.issuesController=SC.ArrayController.create({contentBinding:"GhubIssues.projectController.issues"});
GhubIssues.projectController=SC.ObjectController.create({contentBinding:"GhubIssues.projectsController.selection"});
GhubIssues.projectsController=SC.ArrayController.create({allowsEmptySelection:NO});
GhubIssues.GithubDataSource=SC.DataSource.extend({fetch:function(a,c){var b=c.get("url");
if(b){SC.Request.getUrl(b).json().notify(GhubIssues.Handlers,"didFetchRecords",a,c).send();
return YES}return NO},retrieveRecord:function(a,b){return NO},createRecord:function(a,b){return NO
},updateRecord:function(a,b){return NO},destroyRecord:function(a,b){return NO}});
GhubIssues.Handlers=SC.Object.create({didFetchRecords:function(f,i,g){if(SC.ok(f)){var e=f.get("body")[0],h=e?e.name:null,a=e?e.totalIssues:null,d=e?e.issues:null,c={},b=[];
if(h&&d&&a){d.forEach(function(j){j.guid="@id%@".fmt(SC.Store.generateStoreKey());
b.push(j.guid)});c.name=h;c.totalIssues=a;c.guid="@id%@".fmt(SC.Store.generateStoreKey());
c.issues=b;i.loadRecords(GhubIssues.Project,[c]);i.loadRecords(GhubIssues.Issue,d);
i.dataSourceDidFetchQuery(g)}else{i.dataSourceDidErrorQuery(g,f)}}else{i.dataSourceDidErrorQuery(g,f)
}}});GhubIssues.Issue=SC.Record.extend({title:SC.Record.attr(String),body:SC.Record.attr(String),position:SC.Record.attr(Number),number:SC.Record.attr(Number),votes:SC.Record.attr(Number),comments:SC.Record.attr(Number),gravatarId:SC.Record.attr(String),createdAt:SC.Record.attr(Date),updatedAt:SC.Record.attr(Date),closedAt:SC.Record.attr(Date),submitter:SC.Record.attr(String),labels:SC.Record.attr(Array),state:SC.Record.attr(String),project:SC.Record.toOne("GhubIssues.Project",{isMaster:NO})});
GhubIssues.Project=SC.Record.extend({name:SC.Record.attr(String),issues:SC.Record.toMany("GhubIssues.Issue",{isMaster:YES}),totalIssues:SC.Record.attr(Number),displayName:function(){return this.get("name").split("/")[1]
}.property("name").cacheable()});GhubIssues.mainPage=SC.Page.design({mainPane:SC.MainPane.design({defaultResponder:GhubIssues,childViews:"searchBar contentArea".w(),searchBar:SC.View.design({layout:{top:22,left:50,right:50,height:24},childViews:"searchTB searchBTN selectedProjectLabel".w(),searchTB:SC.TextFieldView.design({layout:{top:0,width:120,height:22,left:0},hint:"User/Repo...",valueBinding:"GhubIssues.searchProject"}),searchBTN:SC.ButtonView.design({layout:{top:0,width:100,height:24,left:126},title:"Fetch",isDefault:YES,keyEquivalent:"return",action:function(){var a=GhubIssues.get("searchProject");
if(!GhubIssues.projects.findProperty("name",a)){GhubIssues.defaultQuery.set("url","/issues/%@".fmt(a));
GhubIssues.projects.refresh()}}}),selectedProjectLabel:SC.LabelView.design({layout:{top:0,right:0,height:24,left:232},valueBinding:"GhubIssues.projectController.name"})}),contentArea:SC.View.design({layout:{top:50,left:50,bottom:50,right:50},childViews:"projects issues".w(),projects:SC.ScrollView.design({layout:{top:0,left:0,bottom:0,width:175},contentView:SC.ListView.design({contentBinding:"GhubIssues.projectsController.arrangedObjects",selectionBinding:"GhubIssues.projectsController.selection",contentValueKey:"displayName",contentUnreadCountKey:"totalIssues",exampleView:SC.ListItemView.design({renderCount:function(a,b){a.push('<span class="count"><span class="inner">',b.toString(),b>1?" Issues":" Issue","</span></span>")
}}),rowHeight:48})}),issues:SC.ScrollView.design({layout:{top:0,left:176,bottom:0,right:0},contentViewBinding:"GhubIssues.mainPage.issueScenes"})})}),issueScenes:SC.SceneView.design({scenes:["issueList","issueDetails"],nowShowing:"issueList",repoListLengthObserver:function(){var b=GhubIssues.getPath("issuesController.length");
if(b>0){var a=GhubIssues.getPath("mainPage.mainPane.contentArea.issues").$()[0].offsetHeight;
var c=b*48>a-2?b*48:a-2;this.adjust("height",c)}}.observes("GhubIssues.issuesController.length")}),issueList:SC.ListView.design({layout:{top:0,left:0,bottom:0,right:0},contentBinding:"GhubIssues.issuesController.arrangedObjects",selectionBinding:"GhubIssues.issuesController.selection",contentValueKey:"title",contentUnreadCountKey:"votes",rowHeight:48,actOnSelect:YES,exampleView:SC.ListItemView.design({renderCount:function(a,b){a.push('<span class="count"><span class="inner">',b.toString(),b>1?" Votes":" Vote","</span></span>")
}}),action:function(){var b=GhubIssues.getPath("mainPage.issueScenes");var a=GhubIssues.getPath("mainPage.mainPane.contentArea.issues").$()[0].offsetHeight;
b.set("nowShowing","issueDetails");b.adjust("height",a-2)}}),issueDetails:SC.View.design({childViews:"topBar detailsSection".w(),topBar:SC.View.design({layout:{top:0,left:0,right:0,height:48},childViews:"backButton".w(),backgroundColor:"#ddd",backButton:SC.ButtonView.design({layout:{centerY:0,width:100,height:24,left:4},title:"Back",action:function(){var c=GhubIssues.getPath("mainPage.issueScenes");
var b=GhubIssues.getPath("issuesController.length");var a=GhubIssues.getPath("mainPage.mainPane.contentArea.issues").$()[0].offsetHeight;
var d=b*48>a-2?b*48:a-2;c.set("nowShowing","issueList");c.adjust("height",d)}})}),detailsSection:SC.View.design({layout:{top:49},childViews:"metaSection descriptionSection".w(),metaSection:SC.View.design({layout:{top:10,left:10,right:10,height:54},childViews:"submitterLabel submitterName createdAtLabel createdAtValue updatedAtLabel updatedAtValue statusLabel statusValue".w(),submitterLabel:SC.LabelView.design({layout:{top:0,width:75,height:16,left:0},value:"Submitter:"}),submitterName:SC.LabelView.design({layout:{top:0,width:75,height:16,left:81},valueBinding:"GhubIssues.issueController.user"}),statusLabel:SC.LabelView.design({layout:{top:0,width:75,height:16,left:166},value:"Status:"}),statusValue:SC.LabelView.design({layout:{top:0,width:75,height:16,left:247},valueBinding:"GhubIssues.issueController.state"}),createdAtLabel:SC.LabelView.design({layout:{top:26,width:75,height:16,left:0},value:"Created:"}),createdAtValue:SC.LabelView.design({layout:{top:26,width:75,height:16,left:81},valueBinding:"GhubIssues.issueController.created_at"}),updatedAtLabel:SC.LabelView.design({layout:{top:26,width:75,height:16,left:166},value:"Updated:"}),updatedAtValue:SC.LabelView.design({layout:{top:26,width:75,height:16,left:247},valueBinding:"GhubIssues.issueController.updated_at"})}),descriptionSection:SC.View.design({layout:{top:55,left:10,right:10,bottom:0},childViews:"descriptionTA".w(),descriptionTA:SC.TextFieldView.design({layout:{top:0,right:0,bottom:0,left:0},isTextArea:YES,valueBinding:"GhubIssues.issueController.body"})})})})});
GhubIssues.main=function main(){GhubIssues.getPath("mainPage.mainPane").append();
GhubIssues.defaultQuery=SC.Query.local("GhubIssues.Project",{url:"/issues/suvajitgupta/tasks"});
GhubIssues.projects=GhubIssues.store.find(GhubIssues.defaultQuery);GhubIssues.projectsController.set("content",GhubIssues.projects)
};function main(){GhubIssues.main()};